plugins {
      id "org.sonarqube" version "2.6.1"
      id "io.github.gradle-nexus.publish-plugin" version "1.0.0"
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'io.github.gradle-nexus.publish-plugin'

allprojects {
    apply plugin: 'jacoco'
}

repositories {
    jcenter()
}

idea {
    project {
        jdkName = '11'
        languageLevel = '11'
    }
    module {
        //if you love browsing Javadoc
        downloadJavadoc = true

        //and hate reading sources :)
        downloadSources = true
    }
}

subprojects {
    configurations.all {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven-publish'

    ext {
      build_version = "2.0.0-${System.env.BUILD_NUMBER ?: 'SNAPSHOT'}"
    }
    group = "uk.gov.ida"
    version = "$build_version"


    repositories {
        if (System.getenv('VERIFY_USE_PUBLIC_BINARIES') == 'true') {
            logger.warn('Production builds MUST NOT be built with public binaries.\nUse artifactory/allowed-repos for production builds.\n\n')

            maven { url  "https://dl.bintray.com/alphagov/maven"      } // For dropwizard-logstash
            maven { url  "https://dl.bintray.com/alphagov/maven-test" } // For other public verify binaries

            jcenter()
        }
        else {
            maven { url 'https://gds.jfrog.io/artifactory/allowed-repos' }
        }
    }


    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
    }
}

task jacocoMerge(type: JacocoMerge) {
    destinationFile = file("$buildDir/jacoco/allTestCoverage.exec")
    executionData = project.fileTree(dir: '.', include:'**/build/jacoco/*est.exec')
    jacocoClasspath = project.files(project.configurations.jacocoAnt)
}

task jacocoRootReport(type: JacocoReport) {
    dependsOn jacocoMerge

    additionalSourceDirs files(subprojects.sourceSets.main.allSource.srcDirs)
    additionalClassDirs files(subprojects.sourceSets.main.output)
    executionData jacocoMerge.destinationFile

    reports {
        html.enabled = true
        xml.enabled = true
    }

    doFirst {
        executionData files(executionData.findAll { it.exists() })
    }
}

task sonar(dependsOn: [':clean', ':build', 'sonarqube'])

defaultTasks 'jar', 'publishToMavenLocal'

